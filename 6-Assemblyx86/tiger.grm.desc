2 shift/reduce conflicts

error:  state 16: shift/reduce conflict (shift LBRACK, reduce by rule 27)
error:  state 45: shift/reduce conflict (shift LBRACK, reduce by rule 27)

state 0:

	program : . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 5
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1
	program	goto 159

	.	error


state 1:

	expb : lvalue .  (reduce by rule 49)
	expb : lvalue . ASSIGN expb 
	lvalue : lvalue . DOT ID 
	lvalue : lvalue . LBRACK exp RBRACK 

	LBRACK	shift 19
	DOT	shift 18
	ASSIGN	shift 17


	.	reduce by rule 49


state 2:

	mexp : expb .  (reduce by rule 43)
	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 43


state 3:

	exp : uexp .  (reduce by rule 36)



	.	reduce by rule 36


state 4:

	exp : mexp .  (reduce by rule 35)



	.	reduce by rule 35


state 5:

	program : exp .  (reduce by rule 0)



	.	reduce by rule 0


state 6:

	expb : NIL .  (reduce by rule 50)



	.	reduce by rule 50


state 7:

	expb : BREAK .  (reduce by rule 51)



	.	reduce by rule 51


state 8:

	mexp : LET . decs IN END 
	mexp : LET . decs IN expseq END 

	FUNCTION	shift 40
	VAR	shift 39
	TYPE	shift 38

	decs	goto 37
	tydecs	goto 36
	tydec	goto 35
	vardec	goto 34
	fundecs	goto 33
	fundec	goto 32

	.	reduce by rule 1


state 9:

	mexp : FOR . ID ASSIGN exp TO exp DO mexp 
	uexp : FOR . ID ASSIGN exp TO exp DO uexp 

	ID	shift 41


	.	error


state 10:

	mexp : WHILE . exp DO mexp 
	uexp : WHILE . exp DO uexp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 42
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 11:

	mexp : IF . exp THEN mexp ELSE mexp 
	uexp : IF . exp THEN exp 
	uexp : IF . exp THEN mexp ELSE uexp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 43
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 12:

	expb : MINUS . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 44
	lvalue	goto 1

	.	error


state 13:

	expb : LPAREN . expseq RPAREN 
	expb : LPAREN . RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	RPAREN	shift 48
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	expseq	goto 47
	exp	goto 46
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 14:

	expb : STRING .  (reduce by rule 55)



	.	reduce by rule 55


state 15:

	expb : INT .  (reduce by rule 54)



	.	reduce by rule 54

error:  state 16: shift/reduce conflict (shift LBRACK, reduce by rule 27)

state 16:

	mexp : ID . LBRACK exp RBRACK OF mexp 
	uexp : ID . LBRACK exp RBRACK OF uexp 
	expb : ID . LPAREN RPAREN 
	expb : ID . LPAREN expcomma RPAREN 
	expb : ID . LBRACE idexplist RBRACE 
	expb : ID . LBRACE RBRACE 
	lvalue : ID .  (reduce by rule 27)
	lvalue : ID . LBRACK exp RBRACK 

	LPAREN	shift 51
	LBRACK	shift 50
	LBRACE	shift 49


	.	reduce by rule 27


state 17:

	expb : lvalue ASSIGN . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 52
	lvalue	goto 1

	.	error


state 18:

	lvalue : lvalue DOT . ID 

	ID	shift 53


	.	error


state 19:

	lvalue : lvalue LBRACK . exp RBRACK 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 54
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 20:

	expb : expb OR . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 55
	lvalue	goto 1

	.	error


state 21:

	expb : expb AND . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 56
	lvalue	goto 1

	.	error


state 22:

	expb : expb GE . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 57
	lvalue	goto 1

	.	error


state 23:

	expb : expb GT . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 58
	lvalue	goto 1

	.	error


state 24:

	expb : expb LE . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 59
	lvalue	goto 1

	.	error


state 25:

	expb : expb LT . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 60
	lvalue	goto 1

	.	error


state 26:

	expb : expb NEQ . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 61
	lvalue	goto 1

	.	error


state 27:

	expb : expb EQ . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 62
	lvalue	goto 1

	.	error


state 28:

	expb : expb DIVIDE . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 63
	lvalue	goto 1

	.	error


state 29:

	expb : expb TIMES . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 64
	lvalue	goto 1

	.	error


state 30:

	expb : expb MINUS . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 65
	lvalue	goto 1

	.	error


state 31:

	expb : expb PLUS . expb 

	ID	shift 45
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	BREAK	shift 7
	NIL	shift 6

	expb	goto 66
	lvalue	goto 1

	.	error


state 32:

	fundecs : fundec .  (reduce by rule 23)
	fundecs : fundec . fundecs 

	FUNCTION	shift 40

	fundecs	goto 67
	fundec	goto 32

	.	reduce by rule 23


state 33:

	decs : fundecs . nonfundecs 

	VAR	shift 39
	TYPE	shift 38

	nonfundecs	goto 70
	tydecs	goto 69
	tydec	goto 35
	vardec	goto 68

	.	reduce by rule 8


state 34:

	decs : vardec . decs 

	FUNCTION	shift 40
	VAR	shift 39
	TYPE	shift 38

	decs	goto 71
	tydecs	goto 36
	tydec	goto 35
	vardec	goto 34
	fundecs	goto 33
	fundec	goto 32

	.	reduce by rule 1


state 35:

	tydecs : tydec .  (reduce by rule 11)
	tydecs : tydec . tydecs 

	TYPE	shift 38

	tydecs	goto 72
	tydec	goto 35

	.	reduce by rule 11


state 36:

	decs : tydecs . nontydecs 

	FUNCTION	shift 40
	VAR	shift 39

	nontydecs	goto 75
	vardec	goto 74
	fundecs	goto 73
	fundec	goto 32

	.	reduce by rule 5


state 37:

	mexp : LET decs . IN END 
	mexp : LET decs . IN expseq END 

	IN	shift 76


	.	error


state 38:

	tydec : TYPE . ID EQ ty 

	ID	shift 77


	.	error


state 39:

	vardec : VAR . ID ASSIGN exp 
	vardec : VAR . ID COLON ID ASSIGN exp 

	ID	shift 78


	.	error


state 40:

	fundec : FUNCTION . ID LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION . ID LPAREN tyfields RPAREN COLON ID EQ exp 

	ID	shift 79


	.	error


state 41:

	mexp : FOR ID . ASSIGN exp TO exp DO mexp 
	uexp : FOR ID . ASSIGN exp TO exp DO uexp 

	ASSIGN	shift 80


	.	error


state 42:

	mexp : WHILE exp . DO mexp 
	uexp : WHILE exp . DO uexp 

	DO	shift 81


	.	error


state 43:

	mexp : IF exp . THEN mexp ELSE mexp 
	uexp : IF exp . THEN exp 
	uexp : IF exp . THEN mexp ELSE uexp 

	THEN	shift 82


	.	error


state 44:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : MINUS expb .  (reduce by rule 62)
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 



	.	reduce by rule 62

error:  state 45: shift/reduce conflict (shift LBRACK, reduce by rule 27)

state 45:

	expb : ID . LPAREN RPAREN 
	expb : ID . LPAREN expcomma RPAREN 
	expb : ID . LBRACE idexplist RBRACE 
	expb : ID . LBRACE RBRACE 
	lvalue : ID .  (reduce by rule 27)
	lvalue : ID . LBRACK exp RBRACK 

	LPAREN	shift 51
	LBRACK	shift 83
	LBRACE	shift 49


	.	reduce by rule 27


state 46:

	expseq : exp .  (reduce by rule 31)
	expseq : exp . SEMICOLON expseq 

	SEMICOLON	shift 84


	.	reduce by rule 31


state 47:

	expb : LPAREN expseq . RPAREN 

	RPAREN	shift 85


	.	error


state 48:

	expb : LPAREN RPAREN .  (reduce by rule 53)



	.	reduce by rule 53


state 49:

	expb : ID LBRACE . idexplist RBRACE 
	expb : ID LBRACE . RBRACE 

	ID	shift 88
	RBRACE	shift 87

	idexplist	goto 86

	.	error


state 50:

	mexp : ID LBRACK . exp RBRACK OF mexp 
	uexp : ID LBRACK . exp RBRACK OF uexp 
	lvalue : ID LBRACK . exp RBRACK 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 89
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 51:

	expb : ID LPAREN . RPAREN 
	expb : ID LPAREN . expcomma RPAREN 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	RPAREN	shift 92
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	expcomma	goto 91
	exp	goto 90
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 52:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 
	expb : lvalue ASSIGN expb .  (reduce by rule 71)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	shift 21
	OR	shift 20


	.	reduce by rule 71


state 53:

	lvalue : lvalue DOT ID .  (reduce by rule 28)



	.	reduce by rule 28


state 54:

	lvalue : lvalue LBRACK exp . RBRACK 

	RBRACK	shift 93


	.	error


state 55:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 
	expb : expb OR expb .  (reduce by rule 70)

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22


	.	reduce by rule 70


state 56:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb AND expb .  (reduce by rule 69)
	expb : expb . OR expb 

	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	shift 27
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22


	.	reduce by rule 69


state 57:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb GE expb .  (reduce by rule 68)
	expb : expb . AND expb 
	expb : expb . OR expb 

	EOF	reduce by rule 68
	COMMA	reduce by rule 68
	SEMICOLON	reduce by rule 68
	RPAREN	reduce by rule 68
	RBRACK	reduce by rule 68
	RBRACE	reduce by rule 68
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	reduce by rule 68
	NEQ	reduce by rule 68
	LT	reduce by rule 68
	LE	reduce by rule 68
	GT	reduce by rule 68
	AND	reduce by rule 68
	OR	reduce by rule 68
	THEN	reduce by rule 68
	ELSE	reduce by rule 68
	TO	reduce by rule 68
	DO	reduce by rule 68
	IN	reduce by rule 68
	END	reduce by rule 68
	FUNCTION	reduce by rule 68
	VAR	reduce by rule 68
	TYPE	reduce by rule 68


	.	error


state 58:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb GT expb .  (reduce by rule 67)
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 

	EOF	reduce by rule 67
	COMMA	reduce by rule 67
	SEMICOLON	reduce by rule 67
	RPAREN	reduce by rule 67
	RBRACK	reduce by rule 67
	RBRACE	reduce by rule 67
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	reduce by rule 67
	NEQ	reduce by rule 67
	LT	reduce by rule 67
	LE	reduce by rule 67
	GE	shift 22
	AND	reduce by rule 67
	OR	reduce by rule 67
	THEN	reduce by rule 67
	ELSE	reduce by rule 67
	TO	reduce by rule 67
	DO	reduce by rule 67
	IN	reduce by rule 67
	END	reduce by rule 67
	FUNCTION	reduce by rule 67
	VAR	reduce by rule 67
	TYPE	reduce by rule 67


	.	error


state 59:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb LE expb .  (reduce by rule 66)
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 

	EOF	reduce by rule 66
	COMMA	reduce by rule 66
	SEMICOLON	reduce by rule 66
	RPAREN	reduce by rule 66
	RBRACK	reduce by rule 66
	RBRACE	reduce by rule 66
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	reduce by rule 66
	NEQ	reduce by rule 66
	LT	reduce by rule 66
	GT	shift 23
	GE	shift 22
	AND	reduce by rule 66
	OR	reduce by rule 66
	THEN	reduce by rule 66
	ELSE	reduce by rule 66
	TO	reduce by rule 66
	DO	reduce by rule 66
	IN	reduce by rule 66
	END	reduce by rule 66
	FUNCTION	reduce by rule 66
	VAR	reduce by rule 66
	TYPE	reduce by rule 66


	.	error


state 60:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb LT expb .  (reduce by rule 65)
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 

	EOF	reduce by rule 65
	COMMA	reduce by rule 65
	SEMICOLON	reduce by rule 65
	RPAREN	reduce by rule 65
	RBRACK	reduce by rule 65
	RBRACE	reduce by rule 65
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	reduce by rule 65
	NEQ	reduce by rule 65
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	reduce by rule 65
	OR	reduce by rule 65
	THEN	reduce by rule 65
	ELSE	reduce by rule 65
	TO	reduce by rule 65
	DO	reduce by rule 65
	IN	reduce by rule 65
	END	reduce by rule 65
	FUNCTION	reduce by rule 65
	VAR	reduce by rule 65
	TYPE	reduce by rule 65


	.	error


state 61:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb NEQ expb .  (reduce by rule 64)
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 

	EOF	reduce by rule 64
	COMMA	reduce by rule 64
	SEMICOLON	reduce by rule 64
	RPAREN	reduce by rule 64
	RBRACK	reduce by rule 64
	RBRACE	reduce by rule 64
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	EQ	reduce by rule 64
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	reduce by rule 64
	OR	reduce by rule 64
	THEN	reduce by rule 64
	ELSE	reduce by rule 64
	TO	reduce by rule 64
	DO	reduce by rule 64
	IN	reduce by rule 64
	END	reduce by rule 64
	FUNCTION	reduce by rule 64
	VAR	reduce by rule 64
	TYPE	reduce by rule 64


	.	error


state 62:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb EQ expb .  (reduce by rule 63)
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 

	EOF	reduce by rule 63
	COMMA	reduce by rule 63
	SEMICOLON	reduce by rule 63
	RPAREN	reduce by rule 63
	RBRACK	reduce by rule 63
	RBRACE	reduce by rule 63
	PLUS	shift 31
	MINUS	shift 30
	TIMES	shift 29
	DIVIDE	shift 28
	NEQ	shift 26
	LT	shift 25
	LE	shift 24
	GT	shift 23
	GE	shift 22
	AND	reduce by rule 63
	OR	reduce by rule 63
	THEN	reduce by rule 63
	ELSE	reduce by rule 63
	TO	reduce by rule 63
	DO	reduce by rule 63
	IN	reduce by rule 63
	END	reduce by rule 63
	FUNCTION	reduce by rule 63
	VAR	reduce by rule 63
	TYPE	reduce by rule 63


	.	error


state 63:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb DIVIDE expb .  (reduce by rule 59)
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 



	.	reduce by rule 59


state 64:

	expb : expb . TIMES expb 
	expb : expb TIMES expb .  (reduce by rule 58)
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 



	.	reduce by rule 58


state 65:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb . MINUS expb 
	expb : expb MINUS expb .  (reduce by rule 61)
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 61


state 66:

	expb : expb . TIMES expb 
	expb : expb . DIVIDE expb 
	expb : expb . PLUS expb 
	expb : expb PLUS expb .  (reduce by rule 60)
	expb : expb . MINUS expb 
	expb : expb . EQ expb 
	expb : expb . NEQ expb 
	expb : expb . LT expb 
	expb : expb . LE expb 
	expb : expb . GT expb 
	expb : expb . GE expb 
	expb : expb . AND expb 
	expb : expb . OR expb 

	TIMES	shift 29
	DIVIDE	shift 28


	.	reduce by rule 60


state 67:

	fundecs : fundec fundecs .  (reduce by rule 24)



	.	reduce by rule 24


state 68:

	nonfundecs : vardec . decs 

	FUNCTION	shift 40
	VAR	shift 39
	TYPE	shift 38

	decs	goto 94
	tydecs	goto 36
	tydec	goto 35
	vardec	goto 34
	fundecs	goto 33
	fundec	goto 32

	.	reduce by rule 1


state 69:

	nonfundecs : tydecs . nontydecs 

	FUNCTION	shift 40
	VAR	shift 39

	nontydecs	goto 95
	vardec	goto 74
	fundecs	goto 73
	fundec	goto 32

	.	reduce by rule 5


state 70:

	decs : fundecs nonfundecs .  (reduce by rule 3)



	.	reduce by rule 3


state 71:

	decs : vardec decs .  (reduce by rule 4)



	.	reduce by rule 4


state 72:

	tydecs : tydec tydecs .  (reduce by rule 12)



	.	reduce by rule 12


state 73:

	nontydecs : fundecs . nonfundecs 

	VAR	shift 39
	TYPE	shift 38

	nonfundecs	goto 96
	tydecs	goto 69
	tydec	goto 35
	vardec	goto 68

	.	reduce by rule 8


state 74:

	nontydecs : vardec . decs 

	FUNCTION	shift 40
	VAR	shift 39
	TYPE	shift 38

	decs	goto 97
	tydecs	goto 36
	tydec	goto 35
	vardec	goto 34
	fundecs	goto 33
	fundec	goto 32

	.	reduce by rule 1


state 75:

	decs : tydecs nontydecs .  (reduce by rule 2)



	.	reduce by rule 2


state 76:

	mexp : LET decs IN . END 
	mexp : LET decs IN . expseq END 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	END	shift 99
	BREAK	shift 7
	NIL	shift 6

	expseq	goto 98
	exp	goto 46
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 77:

	tydec : TYPE ID . EQ ty 

	EQ	shift 100


	.	error


state 78:

	vardec : VAR ID . ASSIGN exp 
	vardec : VAR ID . COLON ID ASSIGN exp 

	COLON	shift 102
	ASSIGN	shift 101


	.	error


state 79:

	fundec : FUNCTION ID . LPAREN tyfields RPAREN EQ exp 
	fundec : FUNCTION ID . LPAREN tyfields RPAREN COLON ID EQ exp 

	LPAREN	shift 103


	.	error


state 80:

	mexp : FOR ID ASSIGN . exp TO exp DO mexp 
	uexp : FOR ID ASSIGN . exp TO exp DO uexp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 104
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 81:

	mexp : WHILE exp DO . mexp 
	uexp : WHILE exp DO . uexp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	mexp	goto 106
	uexp	goto 105
	expb	goto 2
	lvalue	goto 1

	.	error


state 82:

	mexp : IF exp THEN . mexp ELSE mexp 
	uexp : IF exp THEN . exp 
	uexp : IF exp THEN . mexp ELSE uexp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 108
	mexp	goto 107
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 83:

	lvalue : ID LBRACK . exp RBRACK 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 109
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 84:

	expseq : exp SEMICOLON . expseq 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	expseq	goto 110
	exp	goto 46
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 85:

	expb : LPAREN expseq RPAREN .  (reduce by rule 52)



	.	reduce by rule 52


state 86:

	expb : ID LBRACE idexplist . RBRACE 

	RBRACE	shift 111


	.	error


state 87:

	expb : ID LBRACE RBRACE .  (reduce by rule 73)



	.	reduce by rule 73


state 88:

	idexplist : ID . EQ exp 
	idexplist : ID . EQ exp COMMA idexplist 

	EQ	shift 112


	.	error


state 89:

	mexp : ID LBRACK exp . RBRACK OF mexp 
	uexp : ID LBRACK exp . RBRACK OF uexp 
	lvalue : ID LBRACK exp . RBRACK 

	RBRACK	shift 113


	.	error


state 90:

	expcomma : exp .  (reduce by rule 33)
	expcomma : exp . COMMA expcomma 

	COMMA	shift 114


	.	reduce by rule 33


state 91:

	expb : ID LPAREN expcomma . RPAREN 

	RPAREN	shift 115


	.	error


state 92:

	expb : ID LPAREN RPAREN .  (reduce by rule 56)



	.	reduce by rule 56


state 93:

	lvalue : lvalue LBRACK exp RBRACK .  (reduce by rule 30)



	.	reduce by rule 30


state 94:

	nonfundecs : vardec decs .  (reduce by rule 10)



	.	reduce by rule 10


state 95:

	nonfundecs : tydecs nontydecs .  (reduce by rule 9)



	.	reduce by rule 9


state 96:

	nontydecs : fundecs nonfundecs .  (reduce by rule 6)



	.	reduce by rule 6


state 97:

	nontydecs : vardec decs .  (reduce by rule 7)



	.	reduce by rule 7


state 98:

	mexp : LET decs IN expseq . END 

	END	shift 116


	.	error


state 99:

	mexp : LET decs IN END .  (reduce by rule 37)



	.	reduce by rule 37


state 100:

	tydec : TYPE ID EQ . ty 

	ID	shift 120
	LBRACE	shift 119
	ARRAY	shift 118

	ty	goto 117

	.	error


state 101:

	vardec : VAR ID ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 121
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 102:

	vardec : VAR ID COLON . ID ASSIGN exp 

	ID	shift 122


	.	error


state 103:

	fundec : FUNCTION ID LPAREN . tyfields RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN . tyfields RPAREN COLON ID EQ exp 

	ID	shift 125

	tyfields	goto 124
	tyfield	goto 123

	.	reduce by rule 17


state 104:

	mexp : FOR ID ASSIGN exp . TO exp DO mexp 
	uexp : FOR ID ASSIGN exp . TO exp DO uexp 

	TO	shift 126


	.	error


state 105:

	uexp : WHILE exp DO uexp .  (reduce by rule 46)



	.	reduce by rule 46


state 106:

	mexp : WHILE exp DO mexp .  (reduce by rule 40)



	.	reduce by rule 40


state 107:

	exp : mexp .  (reduce by rule 35)
	mexp : IF exp THEN mexp . ELSE mexp 
	uexp : IF exp THEN mexp . ELSE uexp 

	ELSE	shift 127


	.	reduce by rule 35


state 108:

	uexp : IF exp THEN exp .  (reduce by rule 44)



	.	reduce by rule 44


state 109:

	lvalue : ID LBRACK exp . RBRACK 

	RBRACK	shift 128


	.	error


state 110:

	expseq : exp SEMICOLON expseq .  (reduce by rule 32)



	.	reduce by rule 32


state 111:

	expb : ID LBRACE idexplist RBRACE .  (reduce by rule 72)



	.	reduce by rule 72


state 112:

	idexplist : ID EQ . exp 
	idexplist : ID EQ . exp COMMA idexplist 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 129
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 113:

	mexp : ID LBRACK exp RBRACK . OF mexp 
	uexp : ID LBRACK exp RBRACK . OF uexp 
	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 29)

	OF	shift 130


	.	reduce by rule 29


state 114:

	expcomma : exp COMMA . expcomma 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	expcomma	goto 131
	exp	goto 90
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 115:

	expb : ID LPAREN expcomma RPAREN .  (reduce by rule 57)



	.	reduce by rule 57


state 116:

	mexp : LET decs IN expseq END .  (reduce by rule 38)



	.	reduce by rule 38


state 117:

	tydec : TYPE ID EQ ty .  (reduce by rule 13)



	.	reduce by rule 13


state 118:

	ty : ARRAY . OF ID 

	OF	shift 132


	.	error


state 119:

	ty : LBRACE . tyfields RBRACE 

	ID	shift 125

	tyfields	goto 133
	tyfield	goto 123

	.	reduce by rule 17


state 120:

	ty : ID .  (reduce by rule 14)



	.	reduce by rule 14


state 121:

	vardec : VAR ID ASSIGN exp .  (reduce by rule 21)



	.	reduce by rule 21


state 122:

	vardec : VAR ID COLON ID . ASSIGN exp 

	ASSIGN	shift 134


	.	error


state 123:

	tyfields : tyfield .  (reduce by rule 18)
	tyfields : tyfield . COMMA tyfields 

	COMMA	shift 135


	.	reduce by rule 18


state 124:

	fundec : FUNCTION ID LPAREN tyfields . RPAREN EQ exp 
	fundec : FUNCTION ID LPAREN tyfields . RPAREN COLON ID EQ exp 

	RPAREN	shift 136


	.	error


state 125:

	tyfield : ID . COLON ID 

	COLON	shift 137


	.	error


state 126:

	mexp : FOR ID ASSIGN exp TO . exp DO mexp 
	uexp : FOR ID ASSIGN exp TO . exp DO uexp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 138
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 127:

	mexp : IF exp THEN mexp ELSE . mexp 
	uexp : IF exp THEN mexp ELSE . uexp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	mexp	goto 140
	uexp	goto 139
	expb	goto 2
	lvalue	goto 1

	.	error


state 128:

	lvalue : ID LBRACK exp RBRACK .  (reduce by rule 29)



	.	reduce by rule 29


state 129:

	idexplist : ID EQ exp .  (reduce by rule 74)
	idexplist : ID EQ exp . COMMA idexplist 

	COMMA	shift 141


	.	reduce by rule 74


state 130:

	mexp : ID LBRACK exp RBRACK OF . mexp 
	uexp : ID LBRACK exp RBRACK OF . uexp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	mexp	goto 143
	uexp	goto 142
	expb	goto 2
	lvalue	goto 1

	.	error


state 131:

	expcomma : exp COMMA expcomma .  (reduce by rule 34)



	.	reduce by rule 34


state 132:

	ty : ARRAY OF . ID 

	ID	shift 144


	.	error


state 133:

	ty : LBRACE tyfields . RBRACE 

	RBRACE	shift 145


	.	error


state 134:

	vardec : VAR ID COLON ID ASSIGN . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 146
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 135:

	tyfields : tyfield COMMA . tyfields 

	ID	shift 125

	tyfields	goto 147
	tyfield	goto 123

	.	reduce by rule 17


state 136:

	fundec : FUNCTION ID LPAREN tyfields RPAREN . EQ exp 
	fundec : FUNCTION ID LPAREN tyfields RPAREN . COLON ID EQ exp 

	COLON	shift 149
	EQ	shift 148


	.	error


state 137:

	tyfield : ID COLON . ID 

	ID	shift 150


	.	error


state 138:

	mexp : FOR ID ASSIGN exp TO exp . DO mexp 
	uexp : FOR ID ASSIGN exp TO exp . DO uexp 

	DO	shift 151


	.	error


state 139:

	uexp : IF exp THEN mexp ELSE uexp .  (reduce by rule 45)



	.	reduce by rule 45


state 140:

	mexp : IF exp THEN mexp ELSE mexp .  (reduce by rule 39)



	.	reduce by rule 39


state 141:

	idexplist : ID EQ exp COMMA . idexplist 

	ID	shift 88

	idexplist	goto 152

	.	error


state 142:

	uexp : ID LBRACK exp RBRACK OF uexp .  (reduce by rule 48)



	.	reduce by rule 48


state 143:

	mexp : ID LBRACK exp RBRACK OF mexp .  (reduce by rule 42)



	.	reduce by rule 42


state 144:

	ty : ARRAY OF ID .  (reduce by rule 16)



	.	reduce by rule 16


state 145:

	ty : LBRACE tyfields RBRACE .  (reduce by rule 15)



	.	reduce by rule 15


state 146:

	vardec : VAR ID COLON ID ASSIGN exp .  (reduce by rule 22)



	.	reduce by rule 22


state 147:

	tyfields : tyfield COMMA tyfields .  (reduce by rule 19)



	.	reduce by rule 19


state 148:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 153
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 149:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON . ID EQ exp 

	ID	shift 154


	.	error


state 150:

	tyfield : ID COLON ID .  (reduce by rule 20)



	.	reduce by rule 20


state 151:

	mexp : FOR ID ASSIGN exp TO exp DO . mexp 
	uexp : FOR ID ASSIGN exp TO exp DO . uexp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	mexp	goto 156
	uexp	goto 155
	expb	goto 2
	lvalue	goto 1

	.	error


state 152:

	idexplist : ID EQ exp COMMA idexplist .  (reduce by rule 75)



	.	reduce by rule 75


state 153:

	fundec : FUNCTION ID LPAREN tyfields RPAREN EQ exp .  (reduce by rule 25)



	.	reduce by rule 25


state 154:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID . EQ exp 

	EQ	shift 157


	.	error


state 155:

	uexp : FOR ID ASSIGN exp TO exp DO uexp .  (reduce by rule 47)



	.	reduce by rule 47


state 156:

	mexp : FOR ID ASSIGN exp TO exp DO mexp .  (reduce by rule 41)



	.	reduce by rule 41


state 157:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ . exp 

	ID	shift 16
	INT	shift 15
	STRING	shift 14
	LPAREN	shift 13
	MINUS	shift 12
	IF	shift 11
	WHILE	shift 10
	FOR	shift 9
	LET	shift 8
	BREAK	shift 7
	NIL	shift 6

	exp	goto 158
	mexp	goto 4
	uexp	goto 3
	expb	goto 2
	lvalue	goto 1

	.	error


state 158:

	fundec : FUNCTION ID LPAREN tyfields RPAREN COLON ID EQ exp .  (reduce by rule 26)



	.	reduce by rule 26


state 159:


	EOF	accept


	.	error

325 of 800 action table entries left after compaction
198 goto table entries
